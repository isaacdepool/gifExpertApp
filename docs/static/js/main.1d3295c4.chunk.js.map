{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAkB7C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEuB,KAAtBJ,EAAWK,SAEVP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,MAKlB,SAEI,uBACIM,KAAK,OACLC,MAAQR,EACRS,SApBc,SAACN,GACvBF,EAAeE,EAAEO,OAAOF,a,QCPnBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEH,mCACVN,EAHa,iDAGoCO,UAAUF,GAH9C,6BAEH,oCAFG,SAIAG,MAAOR,GAJP,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXvB,kBAeZY,GAfY,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAc,IAAD,EAEZnB,mBAAS,CAC/ByB,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAjBAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAGd,UAGZ,CAAEd,IAEEe,EDrBmBM,CAAarB,GAA/BM,EAF6B,EAE7BA,KAAMQ,EAFuB,EAEvBA,QAEd,OACI,qCACA,mCAAMd,EAAN,OACEc,GAAW,4CAEb,qBAAKlB,UAAU,YAAf,SAEYU,EAAKE,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAESA,GADAA,EAAIC,aEoBlBY,EAjCM,WAAM,IAAD,EAEczC,mBAAS,CAAC,gBAFxB,mBAEf0C,EAFe,KAEH3C,EAFG,KAYrB,OACD,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWf,KAAK,SAACR,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCrBzBwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1d3295c4.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) =>{\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim() !== ''){\r\n\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n        \r\n    const Api_Key = 'UEQyopZn4gyMQJr4zJ8b6HXcmThlN9jZ';\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${Api_Key}`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import { GifGridItem } from \"./GifGridItem\";\r\n\r\nimport { useFechGifs } from \"../hooks/useFechGifs\"\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data, loading } = useFechGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3> {category} </h3>\r\n        { loading && <p>Loanding...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    data.map( img =>\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        { ...img }\r\n                     />\r\n                )}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFechGifs = ( category ) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n                }, 2000);\r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    return state; //{ data: [], loading: true}\r\n}","import { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    // const categories = ['Date Note', 'Dragon Ball', 'Naruto'];\r\n    \r\n    // const handleAdd = () =>{\r\n    //     const name = 'Hola';\r\n        \r\n    //     // setCategories( [...categories, name] );        \r\n    //     setCategories( cats => [...cats, name] );        \r\n    // }\r\n\r\n     return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( (category) => \r\n                    <GifGrid \r\n                    key={category}\r\n                    category={ category } \r\n                    />\r\n                )\r\n            }\r\n        </ol>\r\n    </>\r\n\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}